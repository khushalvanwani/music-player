{"version":3,"sources":["components/Player.js","components/Song.js","data.js","components/LibrarySong.js","components/Library.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Player","_ref","currentSong","isPlaying","setIsPlaying","audioRef","setSongInfo","songInfo","songs","setCurrentSong","id","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","active","console","log","playSongHandler","current","pause","play","getTime","time","Math","floor","slice","skipTrackHandler","async","currentIndex","findIndex","direction","length","trackAnim","transform","animationPercentage","_jsxs","className","children","_jsx","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","FontAwesomeIcon","onClick","size","icon","faAngleLeft","faPause","faPlay","faAngleRight","Song","src","cover","alt","name","artist","chillHop","audio","uuidv4","LibrarySong","Library","setLibraryStatus","libraryStatus","Nav","faMusic","App","useState","data","useRef","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","onLoadedMetadata","onTimeUpdate","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c3d587a.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = ({\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  audioRef,\n  setSongInfo,\n  songInfo,\n  songs,\n  setCurrentSong,\n  id,\n  setSongs,\n}) => {\n  //useEffect\n  const activeLibraryHandler = (nextPrev) => {\n    const newSongs = songs.map((song) => {\n      if (song.id === nextPrev.id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n    console.log(\"Hey from useEffect form player JS\");\n  };\n  //Event Handlers\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const getTime = (time) =>\n    Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  const skipTrackHandler = async (direction) => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    if (direction === \"skip-forward\") {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\n    }\n    if (direction === \"skip-back\") {\n      if ((currentIndex - 1) % songs.length === -1) {\n        await setCurrentSong(songs[songs.length - 1]);\n        // playAudio(isPlaying, audioRef);\n        activeLibraryHandler(songs[songs.length - 1]);\n\n        return;\n      }\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\n    }\n    if (isPlaying) audioRef.current.play();\n  };\n  //adding the styles\n  const trackAnim = {\n    transform: `translateX(${songInfo.animationPercentage}%)`,\n  };\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <div\n          style={{\n            background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\n          }}\n          className=\"track\"\n        >\n          <input\n            min={0}\n            max={songInfo.duration || 0}\n            value={songInfo.currentTime}\n            onChange={dragHandler}\n            type=\"range\"\n          />\n          <div style={trackAnim} className=\"animate-track\"></div>\n        </div>\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"00:00\"}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-back\")}\n          size=\"2x\"\n          className=\"skip-back\"\n          icon={faAngleLeft}\n        />\n        {!isPlaying ? (\n          <FontAwesomeIcon\n            onClick={playSongHandler}\n            size=\"2x\"\n            className=\"play\"\n            icon={faPlay}\n          />\n        ) : (\n          <FontAwesomeIcon\n            onClick={playSongHandler}\n            size=\"2x\"\n            className=\"pause\"\n            icon={faPause}\n          />\n        )}\n\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-forward\")}\n          size=\"2x\"\n          className=\"skip-forward\"\n          icon={faAngleRight}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\n\nconst Song = ({ currentSong }) => {\n  return (\n    <div className=\"song-container\">\n      <img src={currentSong.cover} alt={currentSong.name} />\n      <h2>{currentSong.name}</h2>\n      <h3>{currentSong.artist}</h3>\n    </div>\n  );\n};\n\nexport default Song;\n","import { v4 as uuidv4 } from \"uuid\";\nfunction chillHop() {\n  return [\n    {\n      name: \"Beaver Creek\",\n      cover:\n        \"https://cms.chillhop.com/media/78387/squarel9cfe1a9f1dbf76a04cf4c343dbdb6049acb11147.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Daylight\",\n      cover:\n        \"https://cms.chillhop.com/media/78572/squarel23713085c0a2c1161163e44028168cb65653f057.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Keep Going\",\n      cover:\n        \"https://cms.chillhop.com/media/42443/squarel973ae6f7b847fbfe9e2f6a2efbf2a9121ac8285f.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Nightfall\",\n      cover:\n        \"https://cms.chillhop.com/media/4923/squarelcd050898ca06fdfdb7fcf2313304d952c6dd8e41.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Reflection\",\n      cover:\n        \"https://cms.chillhop.com/media/6825/squarel2a048a5780723e66fff64c3a60814ea64761284f.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Under the City Stars\",\n      cover:\n        \"https://cms.chillhop.com/media/77821/squarelf9d8e2b0b25e5cea0517e11d5c8da28b6adb576e.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    //ADD MORE HERE\n  ];\n}\n\nexport default chillHop;\n","import React from \"react\";\nconst LibrarySong = ({\n  song,\n  songs,\n  setCurrentSong,\n  audioRef,\n  isPlaying,\n  setSongs,\n  id,\n}) => {\n  const songSelectHandler = async () => {\n    await setCurrentSong(song);\n    //active\n    const newSongs = songs.map((song) => {\n      if (song.id === id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n    //check if song is playing\n    if (isPlaying) audioRef.current.play();\n  };\n  return (\n    <div\n      onClick={songSelectHandler}\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\n    >\n      <img src={song.cover} alt={song.name} />\n      <div className=\"song-description\">\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n","import React from \"react\";\nimport LibrarySong from \"./LibrarySong\";\n\nconst Library = ({\n  songs,\n  setCurrentSong,\n  audioRef,\n  isPlaying,\n  setSongs,\n  setLibraryStatus,\n  libraryStatus,\n}) => {\n  return (\n    <div className={`library ${libraryStatus ? \"active\" : \"\"}`}>\n      <h2>Library</h2>\n      <div className=\"library-songs\">\n        {songs.map((song) => (\n          <LibrarySong\n            setSongs={setSongs}\n            isPlaying={isPlaying}\n            audioRef={audioRef}\n            songs={songs}\n            song={song}\n            setCurrentSong={setCurrentSong}\n            id={song.id}\n            key={song.id}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Library;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nav = ({ setLibraryStatus, libraryStatus }) => {\n  return (\n    <nav>\n      <h1>Waves</h1>\n      <button\n        onClick={() => {\n          setLibraryStatus(!libraryStatus);\n        }}\n      >\n        Library\n        <FontAwesomeIcon icon={faMusic} />\n      </button>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import { useRef, useState } from \"react\";\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport \"./styles/app.scss\";\n\n//IMporting DATA\nimport data from \"./data\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\nfunction App() {\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const audioRef = useRef(null);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //calculating percentage\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n    console.log();\n    setSongInfo({\n      currentTime: current,\n      duration,\n      animationPercentage: animation,\n    });\n  };\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n\n    if (isPlaying) audioRef.current.play();\n  };\n  return (\n    <div>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        id={songs.id}\n        songs={songs}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        libraryStatus={libraryStatus}\n        setLibraryStatus={setLibraryStatus}\n        setSongs={setSongs}\n        isPlaying={isPlaying}\n        audioRef={audioRef}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n      />\n      <audio\n        onLoadedMetadata={timeUpdateHandler}\n        onTimeUpdate={timeUpdateHandler}\n        src={currentSong.audio}\n        ref={audioRef}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}